/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  | BSPC |
// | TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  \   |
// | CAPS|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENT  |
// | SHFT|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | shift  |
// | CTRL| ALT | GUI | SPC | SPC | SPC |   | SPC | LOW  | LARW| DARW| UARW| RARW |
                        bindings = <
   &kp ESC   &kp N1    &kp N2    &kp N3 &kp N4 &kp N5               &kp N6 &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
   &kp TAB   &kp Q    &kp W    &kp E &kp R &kp T               &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
   &kp CAPS  &kp A    &kp S    &kp D &kp F &kp G               &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RSHFT
   &kp LSHFT &kp Z    &kp X    &kp C &kp V &kp B               &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
   &kp LCTRL &kp LALT &kp LGUI &kp SPACE &kp SPACE &kp SPACE   &kp SPACE &mo 1 &kp LEFT &kp DOWN & UP & RIGHT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
//
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
      &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &trans   &trans &trans   &trans &bt BT_CLR
   &trans   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &kp C_BRI_DN    &kp C_BRI_UP &trans
   &trans   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &kp C_PREV   &kp C_PP     &kp C_NEXT     &trans
   &trans   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP     &trans
   &trans   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
      &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
      &trans &kp F1   &kp F2 &kp F3   &kp F4   &kp F5      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
      &trans &kp F6   &kp F7 &kp F8   &kp F9   &kp F10      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
   &trans   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
   &trans   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                        >;
                };
        };
};
